// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.4
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#ifndef _cmp_max_HH_
#define _cmp_max_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "cmp_max_fcmp_32ns_32ns_1_1.h"

namespace ap_rtl {

struct cmp_max : public sc_module {
    // Port declarations 12
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<32> > y0;
    sc_in< sc_lv<32> > y1;
    sc_in< sc_lv<32> > y2;
    sc_out< sc_lv<32> > max;
    sc_out< sc_logic > max_ap_vld;
    sc_in< sc_lv<1> > en;


    // Module declarations
    cmp_max(sc_module_name name);
    SC_HAS_PROCESS(cmp_max);

    ~cmp_max();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    cmp_max_fcmp_32ns_32ns_1_1<1,1,32,32,1>* cmp_max_fcmp_32ns_32ns_1_1_U0;
    cmp_max_fcmp_32ns_32ns_1_1<1,1,32,32,1>* cmp_max_fcmp_32ns_32ns_1_1_U1;
    sc_signal< sc_lv<3> > ap_CS_fsm;
    sc_signal< sc_logic > ap_sig_cseq_ST_st1_fsm_0;
    sc_signal< bool > ap_sig_bdd_19;
    sc_signal< sc_lv<1> > en_read_read_fu_32_p2;
    sc_signal< sc_lv<1> > tmp_6_fu_152_p2;
    sc_signal< sc_lv<1> > tmp_6_reg_265;
    sc_signal< sc_lv<1> > or_cond_fu_207_p2;
    sc_signal< sc_lv<1> > or_cond_reg_270;
    sc_signal< sc_lv<1> > tmp_16_fu_213_p2;
    sc_signal< sc_lv<1> > tmp_16_reg_275;
    sc_signal< sc_lv<1> > or_cond2_fu_224_p2;
    sc_signal< sc_lv<1> > or_cond2_reg_280;
    sc_signal< sc_logic > ap_sig_cseq_ST_st2_fsm_1;
    sc_signal< bool > ap_sig_bdd_60;
    sc_signal< sc_logic > ap_sig_cseq_ST_st3_fsm_2;
    sc_signal< bool > ap_sig_bdd_70;
    sc_signal< sc_lv<32> > grp_fu_63_p0;
    sc_signal< sc_lv<32> > grp_fu_63_p1;
    sc_signal< sc_lv<32> > grp_fu_69_p0;
    sc_signal< sc_lv<1> > grp_fu_75_p0;
    sc_signal< sc_lv<1> > grp_fu_63_p2;
    sc_signal< sc_lv<32> > y0_to_int_fu_80_p1;
    sc_signal< sc_lv<32> > y1_to_int_fu_98_p1;
    sc_signal< sc_lv<8> > tmp_fu_84_p4;
    sc_signal< sc_lv<23> > tmp_1_fu_94_p1;
    sc_signal< sc_lv<1> > notrhs_fu_122_p2;
    sc_signal< sc_lv<1> > notlhs_fu_116_p2;
    sc_signal< sc_lv<8> > tmp_2_fu_102_p4;
    sc_signal< sc_lv<23> > tmp_3_fu_112_p1;
    sc_signal< sc_lv<1> > notrhs7_fu_140_p2;
    sc_signal< sc_lv<1> > notlhs6_fu_134_p2;
    sc_signal< sc_lv<1> > tmp_4_fu_128_p2;
    sc_signal< sc_lv<1> > tmp_5_fu_146_p2;
    sc_signal< sc_lv<32> > y2_to_int_fu_159_p1;
    sc_signal< sc_lv<8> > tmp_s_fu_163_p4;
    sc_signal< sc_lv<23> > tmp_9_fu_173_p1;
    sc_signal< sc_lv<1> > notrhs1_fu_183_p2;
    sc_signal< sc_lv<1> > notlhs1_fu_177_p2;
    sc_signal< sc_lv<1> > tmp_10_fu_189_p2;
    sc_signal< sc_lv<1> > tmp_11_fu_195_p2;
    sc_signal< sc_lv<1> > grp_fu_69_p2;
    sc_signal< sc_lv<1> > grp_fu_75_p2;
    sc_signal< sc_lv<1> > tmp_13_fu_201_p2;
    sc_signal< sc_lv<1> > tmp_18_fu_219_p2;
    sc_signal< sc_lv<32> > y1_assign_fu_230_p3;
    sc_signal< sc_lv<5> > grp_fu_63_opcode;
    sc_signal< sc_lv<5> > grp_fu_69_opcode;
    sc_signal< sc_lv<3> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<3> ap_ST_st1_fsm_0;
    static const sc_lv<3> ap_ST_st2_fsm_1;
    static const sc_lv<3> ap_ST_st3_fsm_2;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_1E;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<23> ap_const_lv23_0;
    static const sc_lv<5> ap_const_lv5_2;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_sig_bdd_19();
    void thread_ap_sig_bdd_60();
    void thread_ap_sig_bdd_70();
    void thread_ap_sig_cseq_ST_st1_fsm_0();
    void thread_ap_sig_cseq_ST_st2_fsm_1();
    void thread_ap_sig_cseq_ST_st3_fsm_2();
    void thread_en_read_read_fu_32_p2();
    void thread_grp_fu_63_opcode();
    void thread_grp_fu_63_p0();
    void thread_grp_fu_63_p1();
    void thread_grp_fu_69_opcode();
    void thread_grp_fu_69_p0();
    void thread_grp_fu_75_p0();
    void thread_grp_fu_75_p2();
    void thread_max();
    void thread_max_ap_vld();
    void thread_notlhs1_fu_177_p2();
    void thread_notlhs6_fu_134_p2();
    void thread_notlhs_fu_116_p2();
    void thread_notrhs1_fu_183_p2();
    void thread_notrhs7_fu_140_p2();
    void thread_notrhs_fu_122_p2();
    void thread_or_cond2_fu_224_p2();
    void thread_or_cond_fu_207_p2();
    void thread_tmp_10_fu_189_p2();
    void thread_tmp_11_fu_195_p2();
    void thread_tmp_13_fu_201_p2();
    void thread_tmp_16_fu_213_p2();
    void thread_tmp_18_fu_219_p2();
    void thread_tmp_1_fu_94_p1();
    void thread_tmp_2_fu_102_p4();
    void thread_tmp_3_fu_112_p1();
    void thread_tmp_4_fu_128_p2();
    void thread_tmp_5_fu_146_p2();
    void thread_tmp_6_fu_152_p2();
    void thread_tmp_9_fu_173_p1();
    void thread_tmp_fu_84_p4();
    void thread_tmp_s_fu_163_p4();
    void thread_y0_to_int_fu_80_p1();
    void thread_y1_assign_fu_230_p3();
    void thread_y1_to_int_fu_98_p1();
    void thread_y2_to_int_fu_159_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
