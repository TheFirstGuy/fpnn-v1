// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.4
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="cmp_max,hls_ip_2015_4,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7a200tfbg676-2,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.608500,HLS_SYN_LAT=2,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=139,HLS_SYN_LUT=340}" *)

module cmp_max (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        y0,
        y1,
        y2,
        max,
        max_ap_vld,
        en
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 3'b1;
parameter    ap_ST_st2_fsm_1 = 3'b10;
parameter    ap_ST_st3_fsm_2 = 3'b100;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_17 = 32'b10111;
parameter    ap_const_lv32_1E = 32'b11110;
parameter    ap_const_lv8_FF = 8'b11111111;
parameter    ap_const_lv23_0 = 23'b00000000000000000000000;
parameter    ap_const_lv5_2 = 5'b10;
parameter    ap_true = 1'b1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] y0;
input  [31:0] y1;
input  [31:0] y2;
output  [31:0] max;
output   max_ap_vld;
input  [0:0] en;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg max_ap_vld;
(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm = 3'b1;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_bdd_19;
wire   [0:0] en_read_read_fu_32_p2;
wire   [0:0] tmp_6_fu_152_p2;
reg   [0:0] tmp_6_reg_265;
wire   [0:0] or_cond_fu_207_p2;
reg   [0:0] or_cond_reg_270;
wire   [0:0] tmp_16_fu_213_p2;
reg   [0:0] tmp_16_reg_275;
wire   [0:0] or_cond2_fu_224_p2;
reg   [0:0] or_cond2_reg_280;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_bdd_60;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_bdd_70;
reg   [31:0] grp_fu_63_p0;
reg   [31:0] grp_fu_63_p1;
reg   [31:0] grp_fu_69_p0;
reg   [0:0] grp_fu_75_p0;
wire   [0:0] grp_fu_63_p2;
wire   [31:0] y0_to_int_fu_80_p1;
wire   [31:0] y1_to_int_fu_98_p1;
wire   [7:0] tmp_fu_84_p4;
wire   [22:0] tmp_1_fu_94_p1;
wire   [0:0] notrhs_fu_122_p2;
wire   [0:0] notlhs_fu_116_p2;
wire   [7:0] tmp_2_fu_102_p4;
wire   [22:0] tmp_3_fu_112_p1;
wire   [0:0] notrhs7_fu_140_p2;
wire   [0:0] notlhs6_fu_134_p2;
wire   [0:0] tmp_4_fu_128_p2;
wire   [0:0] tmp_5_fu_146_p2;
wire   [31:0] y2_to_int_fu_159_p1;
wire   [7:0] tmp_s_fu_163_p4;
wire   [22:0] tmp_9_fu_173_p1;
wire   [0:0] notrhs1_fu_183_p2;
wire   [0:0] notlhs1_fu_177_p2;
wire   [0:0] tmp_10_fu_189_p2;
wire   [0:0] tmp_11_fu_195_p2;
wire   [0:0] grp_fu_69_p2;
wire   [0:0] grp_fu_75_p2;
wire   [0:0] tmp_13_fu_201_p2;
wire   [0:0] tmp_18_fu_219_p2;
wire   [31:0] y1_assign_fu_230_p3;
wire   [4:0] grp_fu_63_opcode;
wire   [4:0] grp_fu_69_opcode;
reg   [2:0] ap_NS_fsm;


cmp_max_fcmp_32ns_32ns_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
cmp_max_fcmp_32ns_32ns_1_1_U0(
    .din0( grp_fu_63_p0 ),
    .din1( grp_fu_63_p1 ),
    .opcode( grp_fu_63_opcode ),
    .dout( grp_fu_63_p2 )
);

cmp_max_fcmp_32ns_32ns_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
cmp_max_fcmp_32ns_32ns_1_1_U1(
    .din0( grp_fu_69_p0 ),
    .din1( y2 ),
    .opcode( grp_fu_69_opcode ),
    .dout( grp_fu_69_p2 )
);



always @ (posedge ap_clk) begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & (ap_const_lv1_0 == or_cond_reg_270))) begin
        or_cond2_reg_280 <= or_cond2_fu_224_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0) & ~(en_read_read_fu_32_p2 == ap_const_lv1_0))) begin
        or_cond_reg_270 <= or_cond_fu_207_p2;
        tmp_16_reg_275 <= tmp_16_fu_213_p2;
        tmp_6_reg_265 <= tmp_6_fu_152_p2;
    end
end

always @ (ap_sig_cseq_ST_st3_fsm_2) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0) begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st3_fsm_2) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_19) begin
    if (ap_sig_bdd_19) begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_60) begin
    if (ap_sig_bdd_60) begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_70) begin
    if (ap_sig_bdd_70) begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st1_fsm_0 or y0 or y1 or ap_sig_cseq_ST_st2_fsm_1) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        grp_fu_63_p0 = y1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0)) begin
        grp_fu_63_p0 = y0;
    end else begin
        grp_fu_63_p0 = 'bx;
    end
end

always @ (ap_sig_cseq_ST_st1_fsm_0 or y0 or y1 or ap_sig_cseq_ST_st2_fsm_1) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        grp_fu_63_p1 = y0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0)) begin
        grp_fu_63_p1 = y1;
    end else begin
        grp_fu_63_p1 = 'bx;
    end
end

always @ (ap_sig_cseq_ST_st1_fsm_0 or y0 or y1 or ap_sig_cseq_ST_st2_fsm_1) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        grp_fu_69_p0 = y1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0)) begin
        grp_fu_69_p0 = y0;
    end else begin
        grp_fu_69_p0 = 'bx;
    end
end

always @ (ap_sig_cseq_ST_st1_fsm_0 or tmp_6_fu_152_p2 or tmp_6_reg_265 or ap_sig_cseq_ST_st2_fsm_1) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        grp_fu_75_p0 = tmp_6_reg_265;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0)) begin
        grp_fu_75_p0 = tmp_6_fu_152_p2;
    end else begin
        grp_fu_75_p0 = 'bx;
    end
end

always @ (en_read_read_fu_32_p2 or ap_sig_cseq_ST_st3_fsm_2) begin
    if ((~(en_read_read_fu_32_p2 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2))) begin
        max_ap_vld = ap_const_logic_1;
    end else begin
        max_ap_vld = ap_const_logic_0;
    end
end
always @ (ap_start or ap_CS_fsm or en_read_read_fu_32_p2) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
        begin
            if ((~(ap_start == ap_const_logic_0) & (en_read_read_fu_32_p2 == ap_const_lv1_0))) begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end else if ((~(ap_start == ap_const_logic_0) & ~(en_read_read_fu_32_p2 == ap_const_lv1_0))) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : 
        begin
            ap_NS_fsm = ap_ST_st3_fsm_2;
        end
        ap_ST_st3_fsm_2 : 
        begin
            ap_NS_fsm = ap_ST_st1_fsm_0;
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end



always @ (ap_CS_fsm) begin
    ap_sig_bdd_19 = (ap_CS_fsm[ap_const_lv32_0] == ap_const_lv1_1);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_60 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_70 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2]);
end

assign en_read_read_fu_32_p2 = en;

assign grp_fu_63_opcode = ap_const_lv5_2;

assign grp_fu_69_opcode = ap_const_lv5_2;

assign grp_fu_75_p2 = (grp_fu_75_p0 & grp_fu_63_p2);

assign max = ((or_cond_reg_270[0:0] === 1'b1) ? y0 : y1_assign_fu_230_p3);

assign notlhs1_fu_177_p2 = (tmp_s_fu_163_p4 != ap_const_lv8_FF? 1'b1: 1'b0);

assign notlhs6_fu_134_p2 = (tmp_2_fu_102_p4 != ap_const_lv8_FF? 1'b1: 1'b0);

assign notlhs_fu_116_p2 = (tmp_fu_84_p4 != ap_const_lv8_FF? 1'b1: 1'b0);

assign notrhs1_fu_183_p2 = (tmp_9_fu_173_p1 == ap_const_lv23_0? 1'b1: 1'b0);

assign notrhs7_fu_140_p2 = (tmp_3_fu_112_p1 == ap_const_lv23_0? 1'b1: 1'b0);

assign notrhs_fu_122_p2 = (tmp_1_fu_94_p1 == ap_const_lv23_0? 1'b1: 1'b0);

assign or_cond2_fu_224_p2 = (grp_fu_75_p2 & tmp_18_fu_219_p2);

assign or_cond_fu_207_p2 = (grp_fu_75_p2 & tmp_13_fu_201_p2);

assign tmp_10_fu_189_p2 = (notrhs1_fu_183_p2 | notlhs1_fu_177_p2);

assign tmp_11_fu_195_p2 = (tmp_4_fu_128_p2 & tmp_10_fu_189_p2);

assign tmp_13_fu_201_p2 = (tmp_11_fu_195_p2 & grp_fu_69_p2);

assign tmp_16_fu_213_p2 = (tmp_5_fu_146_p2 & tmp_10_fu_189_p2);

assign tmp_18_fu_219_p2 = (tmp_16_reg_275 & grp_fu_69_p2);

assign tmp_1_fu_94_p1 = y0_to_int_fu_80_p1[22:0];

assign tmp_2_fu_102_p4 = {{y1_to_int_fu_98_p1[ap_const_lv32_1E : ap_const_lv32_17]}};

assign tmp_3_fu_112_p1 = y1_to_int_fu_98_p1[22:0];

assign tmp_4_fu_128_p2 = (notrhs_fu_122_p2 | notlhs_fu_116_p2);

assign tmp_5_fu_146_p2 = (notrhs7_fu_140_p2 | notlhs6_fu_134_p2);

assign tmp_6_fu_152_p2 = (tmp_4_fu_128_p2 & tmp_5_fu_146_p2);

assign tmp_9_fu_173_p1 = y2_to_int_fu_159_p1[22:0];

assign tmp_fu_84_p4 = {{y0_to_int_fu_80_p1[ap_const_lv32_1E : ap_const_lv32_17]}};

assign tmp_s_fu_163_p4 = {{y2_to_int_fu_159_p1[ap_const_lv32_1E : ap_const_lv32_17]}};

assign y0_to_int_fu_80_p1 = y0;

assign y1_assign_fu_230_p3 = ((or_cond2_reg_280[0:0] === 1'b1) ? y1 : y2);

assign y1_to_int_fu_98_p1 = y1;

assign y2_to_int_fu_159_p1 = y2;


endmodule //cmp_max

